name: Build AppBundle & ABI	(w/ sound-null-safety)

on:	
  push:	
    branches: [ master ]

env:	
  KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}	
  ALIAS_NAME: ${{ secrets.ALIAS_NAME }}	
  ALIAS_PASS: ${{ secrets.ALIAS_PASS }}	

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '1.8'

    - name: Setup Flutter
      uses: subosito/flutter-action@v1
      with:
        channel: 'stable'

    - name: Override Dependencies
      run: |
        sudo add-apt-repository ppa:rmescandon/yq -y
        sudo apt update
        sudo apt install yq -y
        
        # Add a temp fix for dio
        # yq w -i pubspec.yaml dependencies.dio 4.0.0-beta5

    - name: Flutter Build Pre-Checks Phase 1
      run: |
        flutter doctor
        flutter pub get
  
    - name: Flutter Build Pre-Checks Phase 2
      run: |
        flutter packages pub run --verbose build_runner build --delete-conflicting-outputs

    - name: Flutter Test
      continue-on-error: true
      run: |
        flutter test --verbose

    - name: Flutter Build AppBundle & ABI
      run: |
        flutter build apk --target-platform android-arm,android-arm64,android-x64 --split-per-abi --verbose --dart-define=IS_GOOGLEPLAY=false
        flutter build appbundle --target-platform android-arm,android-arm64,android-x64 --verbose --dart-define=IS_GOOGLEPLAY=false

    # - uses: actions/upload-artifact@master
    #   name: Upload Output Folder
    #   with:
    #     name: PixEz-flutter
    #     path: build/app/outputs

    # - uses: actions/upload-artifact@master
    #   name: Upload app-release.apk
    #   with:
    #     name: app-release
    #     path: build/app/outputs/apk/release/*.apk
    
    - uses: actions/upload-artifact@master
      name: Upload arm64-v8a variant
      with:
        name: app-arm64-v8a-release
        path: build/app/outputs/apk/release/app-arm64-v8a-release.apk

    - name: Send arm64-v8a variant to me via Telegram
      env:
        CHAT_ID: ${{ secrets.CHAT_ID }}
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      run: |
        export OUTPUT="build/app/outputs/apk/release/app-arm64-v8a-release.apk"
        curl https://api.telegram.org/bot${BOT_TOKEN}/sendDocument -X POST -F chat_id="$CHAT_ID" -F caption="$GITHUB_SHA\nSound-Null-Safety Build" -F document="@$OUTPUT"
