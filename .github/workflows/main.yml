name: Build

on:
  push:
    branches: [ ci-test ]

env:
  KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
  ALIAS_NAME: ${{ secrets.ALIAS_NAME }}
  ALIAS_PASS: ${{ secrets.ALIAS_PASS }}

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '1.8'

    - name: Setup Flutter
      uses: subosito/flutter-action@v1
      with:
        channel: 'stable'

    - name: Setup intl_utils
      run: |
        sudo add-apt-repository ppa:rmescandon/yq -y
        sudo apt update
        sudo apt install yq -y
        yq w -i pubspec.yaml dependencies.intl ^$(yq r pubspec.lock packages.intl.version)
        yq w -i pubspec.yaml dependencies.intl_utils ^1.8.0

    - name: Flutter Build Pre-Checks
      run: |
        flutter doctor -v
        flutter pub get --verbose
        flutter pub run --verbose intl_utils:generate
        flutter packages pub run --verbose build_runner build --delete-conflicting-outputs
        flutter test --verbose

    - name: Flutter Build AppBundle & ABI
      run: flutter build apk --obfuscate --verbose --dart-define=IS_GOOGLEPLAY=false --split-debug-info=

    - uses: actions/upload-artifact@master
      name: Upload Output Folder
      with:
        name: PixEz-flutter
        path: build/app/outputs

    - uses: actions/upload-artifact@master
      name: Upload app-release.apk
      with:
        name: app-release
        path: build/app/outputs/apk/release/app-release.apk

    - name: Send to me via Telegram
      env:
        CHAT_ID: ${{ secrets.CHAT_ID }}
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      run: |
        OUTPUT="build/app/outputs/apk/release"
        export name=$(find $OUTPUT -name "*.apk")
        curl https://api.telegram.org/bot${BOT_TOKEN}/sendDocument -X POST -F chat_id="$CHAT_ID" -F caption="$GITHUB_SHA" -F document="@$name"
