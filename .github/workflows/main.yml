name: Build

on:
  push:
    branches: [ master ]

env:
  KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
  ALIAS_NAME: ${{ secrets.ALIAS_NAME }}
  ALIAS_PASS: ${{ secrets.ALIAS_PASS }}

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-java@v1
      with:
        java-version: '1.8'

    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'

    - run: sudo apt-get install tree
    - run: tree
    - run: flutter doctor
    - run: flutter pub get --verbose
    # - run: flutter packages pub run build_runner build
    # - run: flutter pub run intl_utils:generate
    - run: flutter test --verbose
    - run: flutter build apk --verbose
    - run: tree

    - uses: actions/upload-artifact@master
      name: Upload output folder
      with:
        name: PixEz-flutter
        path: build/app/outputs

    - uses: actions/upload-artifact@master
      name: Upload app-release.apk
      with:
        name: app-release
        path: build/app/outputs/apk/release/app-release.apk

    - name: Send to me via Telegram
      env:
        CHAT_ID: ${{ secrets.CHAT_ID }}
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      run: |
        OUTPUT="build/app/outputs/apk/release"
        export name=$(find $OUTPUT -name "*.apk")
        curl https://api.telegram.org/bot${BOT_TOKEN}/sendDocument -X POST -F chat_id="$CHAT_ID" -F caption="$GITHUB_SHA" -F document="@$name"